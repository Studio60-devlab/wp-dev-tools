#   -------------------------------
#   0 : PATH
#   -------------------------------
#
export PATH="$PATH:/usr/local/bin/"
export PATH="/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:$PATH"
PHP_VERSION=$(ls /Applications/MAMP/bin/php/ | sort -n | tail -1)

LOCALHOST=$(echo '127.0.0.1:')
APACHE_PORT=$(cat /Applications/MAMP/conf/apache/httpd.conf | grep ^Listen | tr -d [A-Z][a-z][:space:] | cat)

LOCALHOST_ADDRESS=$(echo $LOCALHOST$APACHE_PORT)


alias Firefox="/Applications/Firefox\ Developer\ Edition.app/Contents/MacOS/firefox "
alias Chrome="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome "
alias Safari="/Applications/Safari.app/Contents/MacOS/Safari "


WP_ADMIN_URL=$(echo /wpms/wp-admin/)
WP_LAB_URL=$(echo /wpms/wp-content/sites/)

export PATH=/Applications/MAMP/bin/php/${PHP_VERSION}/bin:$PATH
alias wpcli='php /Applications/MAMP/bin/php/${PHP_VERSION}/bin/wp-cli.phar'
alias wpadmin='Chrome ${LOCALHOST_ADDRESS}${WP_ADMIN_URL}'
alias wplab=' cd /Applications/MAMP/htdocs/wpms/wp-content/sites/ ; open . ; Chrome  ${LOCALHOST_ADDRESS}${WP_LAB_URL} && ls'






MEDIACENTER=$(cd /Volumes/Data/MEDIACENTER && pwd )
MUSIC=$(cd $MEDIACENTER/MUSIC && pwd )
VIDEO=$(cd $MEDIACENTER/VIDEO && pwd )

#
#   1 : Resources
#
function waiting {
	sleep 1
}
#
spinner()
{
	local pid=$!
	local delay=0.4
	local spinstr='|/-\'
	while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
		local temp=${spinstr#?}
		printf " [%c]  " "$spinstr"
		local spinstr=$temp${spinstr%"$temp"}
		sleep $delay
		printf "\b\b\b\b\b\b"
	done
	printf "    \b\b\b\b"
}


#
# Prompt
#   
export PS1="________________________________________________________________________________\n
| \w @ \h (\u) \n| => "
export PS2="| => "
#  ---------------------------
#   ALIASES
#   ————————————VLC_MEDIA_PLAYER
alias vlc='/Applications/VLC.app/Contents/MacOS/VLC' 

alias radioFculture='vlc http://fculture.duzob.fr/32'
alias radioFinter='vlc http://finter.duzob.fr/32'
alias radioFinfo='vlc http://finfo.duzob.fr/32'

alias radioRTL='vlc  http://streaming.radio.rtl.fr/rtl-1-24-24.aac'
alias radioRTS1='vlc http://stream.srg-ssr.ch/m/la-1ere/aacp_32'
alias radioCouleur3='vlc http://stream.srg-ssr.ch/m/couleur3/aacp_32'

alias SulacoMusic='ls $MUSIC  '
alias SulacoVideo='ls $VIDEO '
# script editor
alias edit='/Applications/Visual\ Studio\ Code.app/Contents/MacOS/Electron '

#   ————————————NET
# alias myip='curl ip.appspot.com'                    # myip:         Public facing IP Address
alias netCons='lsof -i'                             # netCons:      Show all open TCP/IP sockets
alias flushDNS='dscacheutil -flushcache'            # flushDNS:     Flush out the DNS Cache
alias lsock='sudo /usr/sbin/lsof -i -P'             # lsock:        Display open sockets
alias lsockU='sudo /usr/sbin/lsof -nP | grep UDP'   # lsockU:       Display only open UDP sockets
alias lsockT='sudo /usr/sbin/lsof -nP | grep TCP'   # lsockT:       Display only open TCP sockets
alias ipInfo0='ipconfig getpacket en0'              # ipInfo0:      Get info on connections for en0
alias ipInfo1='ipconfig getpacket en1'              # ipInfo1:      Get info on connections for en1
alias openPorts='sudo lsof -i | grep LISTEN'        # openPorts:    All listening connections
#alias showBlocked='sudo iptab list'                # showBlocked:  All iptab rules inc/ blocked IPs

#   ————————————UTILS
alias delete='rm -Rf'
alias cp='cp -iv'                           # Preferred 'cp' implementation
alias mv='mv -iv'                           # Preferred 'mv' implementation
alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
alias ll='ls -FGlAhp'                       # Preferred 'ls' implementation
alias less='less -FSRXc'                    # Preferred 'less' implementation
cd() { builtin cd "$@"; ll; }               # Always list directory contents upon 'cd'
alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
alias ..='cd ../'                           # Go back 1 directory level
alias f='open -a Finder ./'                 # f: Opens current directory in MacOS Finder
alias ~="cd ~"                              # ~:            Go Home
alias c='clear'                             # c:            Clear terminal display
alias which='type -all'                     # which:        Find executables
alias path='echo -e ${PATH//:/\\n}'         # path:         Echo all executable Paths
alias show_options='shopt'                  # Show_options: display bash options settings
alias fix_stty='stty sane'                  # fix_stty:     Restore terminal settings when screwed up
alias cic='set completion-ignore-case On'   # cic:          Make tab-completion case-insensitive
mcd () { mkdir -p "$1" && cd "$1"; }        # mcd:          Makes new Dir and jumps inside
trash () { command mv "$@" ~/.Trash ; }     # trash:        Moves a file to the MacOS trash
ql () { qlmanage -p "$*" >& /dev/null; }    # ql:           Opens any file in MacOS Quicklook Preview
alias DT='tee ~/Desktop/terminalOut.txt'    # DT:           Pipe content to file on MacOS Desktop
alias ttop="top -R -F -s 10 -o rsize"
# 
#
#   lr:  Full Recursive Directory Listing
#   ------------------------------------------
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'

#   ---------------------------------------
#   7. SYSTEMS OPERATIONS & INFORMATION
#   ---------------------------------------
#	Archive
#
# zipf:To create a ZIP archive of a folder
zipf () { zip -r "$1".zip "$1" ; } 
#
#
#
#   extract:  Extract most know archives with one command
#   ---------------------------------------------------------
    extract () {
        if [ -f $1 ] ; then
          case $1 in
            *.tar.bz2)   tar xjf $1     ;;
            *.tar.gz)    tar xzf $1     ;;
            *.bz2)       bunzip2 $1     ;;
            *.rar)       unrar e $1     ;;
            *.gz)        gunzip $1      ;;
            *.tar)       tar xf $1      ;;
            *.tbz2)      tar xjf $1     ;;
            *.tgz)       tar xzf $1     ;;
            *.zip)       unzip $1       ;;
            *.Z)         uncompress $1  ;;
            *.7z)        7z x $1        ;;
            *)     echo "'$1' cannot be extracted via extract()" ;;
             esac
         else
             echo "'$1' is not a valid file"
         fi
    }
#
#
#
#
    alias mountReadWrite='/sbin/mount -uw /'    # mountReadWrite:   For use when booted into single-user
#
#   cleanupDS:  Recursively delete .DS_Store files
#   -------------------------------------------------------------------
    alias cleanupDS="find . -type f -name '*.DS_Store' -ls -delete"

#   finderShowHidden:   Show hidden files in Finder
#   finderHideHidden:   Hide hidden files in Finder
#   -------------------------------------------------------------------
    alias finderShowHidden='defaults write com.apple.finder ShowAllFiles TRUE'
    alias finderHideHidden='defaults write com.apple.finder ShowAllFiles FALSE'

#   cleanupLS:  Clean up LaunchServices to remove duplicates in the "Open With" menu
#   -----------------------------------------------------------------------------------
    alias cleanupLS="/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder"

#    screensaverDesktop: Run a screensaver on the Desktop
#   -----------------------------------------------------------------------------------
    alias screensaverDesktop='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background'


#   ii:  display useful host related informaton
#
    ii() {
        echo -e "\nYou are logged on ${RED}$HOST"
        echo -e "\nAdditionnal information:$NC " ; uname -a
        echo -e "\n${RED}Users logged on:$NC " ; w -h
        echo -e "\n${RED}Current date :$NC " ; date
        echo -e "\n${RED}Machine stats :$NC " ; uptime
        echo -e "\n${RED}Current network location :$NC " ; scselect
        echo -e "\n${RED}Public facing IP Address :$NC " ; myip
        #echo -e "\n${RED}DNS Configuration:$NC " ; scutil --dns
        echo
    }
#

#   cdf:  'Cd's to frontmost window of MacOS Finder
#   ------------------------------------------------------
    cdf () {
        currFolderPath=$( /usr/bin/osascript <<EOT
            tell application "Finder"
                try
            set currFolder to (folder of the front window as alias)
                on error
            set currFolder to (path to desktop folder as alias)
                end try
                POSIX path of currFolder
            end tell
EOT
        )
        echo "cd to \"$currFolderPath\""
        cd "$currFolderPath"
    }















